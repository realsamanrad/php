name: Build and Push PHP Docker Images

on:
  push:
    branches:
      - main
    paths:
      - "php-8.1-composer.yaml"
      - "frankenphp-8.1.yaml"
      - "frankenphp-8.1.dev.yaml"
      - "frankenphp-8.2.yaml"
      - "frankenphp-8.2.dev.yaml"
      - "frankenphp-8.3.yaml"
      - "frankenphp-8.3.dev.yaml"
      - "frankenphp-8.4.yaml"
      - "frankenphp-8.4.dev.yaml"

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check file changes
        id: check-files
        uses: dorny/paths-filter@v3
        with:
          filters: |
            php81composer:
              - 'php-8.1-composer.yaml'
            php81dev:
              - 'frankenphp-8.1.dev.yaml'
            php81:
              - 'frankenphp-8.1.yaml'
            php82dev:
              - 'frankenphp-8.2.dev.yaml'
            php82:
              - 'frankenphp-8.2.yaml'
            php83dev:
              - 'frankenphp-8.3.dev.yaml'
            php83:
              - 'frankenphp-8.3.yaml'
            php84dev:
              - 'frankenphp-8.4.dev.yaml'
            php84:
              - 'frankenphp-8.4.yaml'

      - name: Build and Push PHP 8.1 Composer Image
        if: steps.check-files.outputs.php81composer == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build php-8.1-composer.yaml ghcr.io/realsamanrad/php:8.1-composer image.tar
          docker load < image.tar
          docker tag ghcr.io/realsamanrad/php:8.1-composer-amd64 ghcr.io/realsamanrad/php:8.1-composer
          docker push ghcr.io/realsamanrad/php:8.1-composer

      - name: Build and Push PHP 8.1 Dev Image
        if: steps.check-files.outputs.php81dev == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.1.dev.yaml ghcr.io/realsamanrad/frankenphp:8.1-dev image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.1-dev-amd64

      - name: Build and Push PHP 8.1 Image
        if: steps.check-files.outputs.php81 == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.1.yaml ghcr.io/realsamanrad/frankenphp:8.1 image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.1-amd64

      - name: Build and Push PHP 8.2 Dev Image
        if: steps.check-files.outputs.php82dev == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.2.dev.yaml ghcr.io/realsamanrad/frankenphp:8.2-dev image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.2-dev-amd64

      - name: Build and Push PHP 8.2 Image
        if: steps.check-files.outputs.php82 == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.2.yaml ghcr.io/realsamanrad/frankenphp:8.2 image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.2-amd64

      - name: Build and Push PHP 8.3 Dev Image
        if: steps.check-files.outputs.php83dev == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.3.dev.yaml ghcr.io/realsamanrad/frankenphp:8.3-dev image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.3-dev-amd64

      - name: Build and Push PHP 8.3 Image
        if: steps.check-files.outputs.php83 == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.3.yaml ghcr.io/realsamanrad/frankenphp:8.3 image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.3-amd64

      - name: Build and Push PHP 8.4 Dev Image
        if: steps.check-files.outputs.php84dev == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.4.dev.yaml ghcr.io/realsamanrad/frankenphp:8.4-dev image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.4-dev-amd64

      - name: Build and Push PHP 8.4 Image
        if: steps.check-files.outputs.php84 == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build frankenphp-8.4.yaml ghcr.io/realsamanrad/frankenphp:8.4 image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.4-amd64

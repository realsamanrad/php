name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'php-frankenphp-8.4.dev.yaml'
      - 'php-frankenphp-8.4.yaml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_TOKEN }}

      - name: Check for php-frankenphp-8.4.dev.yaml changes
        id: check-dev-file
        uses: dorny/paths-filter@v3
        with:
          filters: |
            dev:
              - 'php-frankenphp-8.4.dev.yaml'

      - name: Check for php-frankenphp-8.4.yaml changes
        id: check-prod-file
        uses: dorny/paths-filter@v3
        with:
          filters: |
            prod:
              - 'php-frankenphp-8.4.yaml'

      - name: Build and Push Development Image
        if: steps.check-dev-file.outputs.dev == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build php-frankenphp-8.4.dev.yaml ghcr.io/realsamanrad/frankenphp:8.4-dev image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.4-dev-amd64

      - name: Build and Push Production Image
        if: steps.check-prod-file.outputs.prod == 'true'
        run: |
          docker pull cgr.dev/chainguard/apko:latest
          docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build php-frankenphp-8.4.yaml ghcr.io/realsamanrad/frankenphp:8.4 image.tar
          docker load < image.tar
          docker push ghcr.io/realsamanrad/frankenphp:8.4-amd64